{"version":3,"sources":["Components/Answers/Answer.jsx","Components/QuestionCard.jsx","API.js","music/btn.mp3","styles.js","Components/Statistics/StatisticsItem.jsx","Components/Statistics/Statistics.jsx","music/bcg.mp3","Components/SoundSettings/SoundSettings.jsx","Components/GameSettings/DifficultySet.jsx","Components/GameSettings/TopicSet.jsx","Components/GameSettings/NumberOfQuestions.jsx","Components/GameSettings/GameSettings.jsx","App.js","reportWebVitals.js","index.js"],"names":["Answer","props","handleAnswerChange","e","key","alert","useEffect","window","addEventListener","type","id","answer","hotkey","className","disabled","userAnswer","value","question","onClick","callback","onKeyPress","dangerouslySetInnerHTML","__html","QuestionCard","answers","questionNr","totalQuestions","ans","map","hotkeys","fetchQuizQuestions","amount","difficulty","category","a","endpoint","fetch","json","data","results","incorrect_answers","correct_answer","arr","i","push","menu","display","flexDirection","StatisticItem","name","correct","incorrect","Statisctics","categories","9","10","11","12","15","21","27","keys","Object","localStorage","tableBody","abc","JSON","parse","getItem","categoryName","toString","el","console","log","length","setStatistic","statistic","clear","SoundSettings","useState","volume","setVolume","useSound","bcgSound","interrupt","play","stop","min","max","step","target","changeVolume","setSoundSettings","soundSettings","DifficultySet","state","handleChange","bind","event","this","setState","setdif","onChange","React","Component","TopicSet","topic","setTpc","NumberOfQuestions","Number","setAmount","GameSettings","style","setDifficulty","classname","setCategory","setSettings","settings","App","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","btnSound","startTrivia","newQuestions","Statistics","undefined","currentTarget","item","prev","setItem","stringify","answerObject","correctAnswer","nextQuestion","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bad39fb3.chunk.js","sourcesContent":["import React, {useEffect, ReactElement} from 'react';\r\n\r\nfunction Answer(props) {\r\n\r\n    const handleAnswerChange = (e) => {\r\n        if (e.key === 'y') {\r\n            alert('The sky is your starting point!')\r\n        } else if (e.key === 'n') {\r\n            alert('The sky is your limitðŸ‘€')\r\n        }\r\n    }\r\n\r\n        useEffect(() => {\r\n            window.addEventListener('keydown', handleAnswerChange);\r\n        });\r\n\r\n        return (\r\n            <div key={props.answer.question}>\r\n                    <button type=\"submit\" id={props.answer.hotkey} className={\"card\"} disabled={props.userAnswer ? true : false}\r\n                            value={props.answer.question} onClick={props.callback} onKeyPress={props.callback}>\r\n                        <span dangerouslySetInnerHTML={{__html: `${props.answer.hotkey} ${props.answer.question}`}}/>\r\n                    </button>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Answer\r\n","import React from 'react'\r\nimport './questionCard.css'\r\nimport Answer from \"./Answers/Answer\";\r\nimport {useEffect} from \"react/cjs/react.production.min\";\r\n\r\nconst QuestionCard = ({\r\n                                           question,\r\n                                           answers,\r\n                                           callback,\r\n                                           userAnswer,\r\n                                           questionNr,\r\n                                           totalQuestions,\r\n                                       }) =>  {\r\n\r\n    const ans = answers.map( answer => {\r\n        return <Answer answer = {answer} callback={callback} userAnswer={userAnswer} />\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <p className=\"number\">\r\n                Question: {questionNr} / {totalQuestions}\r\n            </p>\r\n            <p dangerouslySetInnerHTML={{__html: question}}/>\r\n            <div>\r\n                {ans}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionCard\r\n","import {shuffleArray} from \"./utils\";\r\nconst hotkeys = ['a', 'b', 'c', 'd']\r\n\r\n\r\nexport const fetchQuizQuestions = async (amount, difficulty, category) => {\r\n    const endpoint = `https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficulty}&type=multiple`\r\n    const data = await (await fetch((endpoint))).json();\r\n    return data.results.map((question) => {\r\n        const a = [...question.incorrect_answers, question.correct_answer]\r\n        const arr = []\r\n        for(let i=0; i<4; i++) {\r\n            arr.push({question: a[i], hotkey: hotkeys[i]})\r\n        }\r\n        return {\r\n            ...question,\r\n            answers: arr\r\n        }\r\n    })\r\n};\r\n","export default __webpack_public_path__ + \"static/media/btn.23620f2c.mp3\";","export const menu = {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n}\r\n\r\nexport const difficulty = {\r\n    display: \"none\"\r\n}\r\n","const StatisticItem = (props) => {\r\n    return (\r\n        <tr>\r\n        <td>{props.name}</td>\r\n        <td>{props.correct}</td>\r\n        <td>{props.incorrect}</td>\r\n    </tr>\r\n    )\r\n}\r\n\r\nexport default StatisticItem\r\n","import StatisticItem from \"./StatisticsItem\";\r\n\r\nconst Statisctics = (props) => {\r\n\r\n    const categories = {\r\n        9: 'General',\r\n        10: 'Books',\r\n        11: 'Films',\r\n        12: 'Music',\r\n        15: 'Games',\r\n        21: 'Sports',\r\n        27: 'Animals'\r\n    }\r\n\r\n    const keys = Object.keys(localStorage)\r\n\r\n    const allStatistics = keys.map(key => {\r\n        const abc = JSON.parse(localStorage.getItem(key))\r\n        const categoryName = categories[key.toString()]\r\n        const item = {\r\n            ...abc, categoryName\r\n        }\r\n        return item\r\n    })\r\n\r\n    const tableBody = allStatistics.map(el => {\r\n        return <StatisticItem name={el.categoryName} incorrect={el.incorrect} correct={el.correct} key={el.categoryName}/>\r\n    })\r\n\r\n    console.log(keys)\r\n\r\n    return (\r\n        <div>\r\n            <div> Statistics </div>\r\n            {tableBody.length ? (\r\n                <table>\r\n                    <tr>\r\n                        <th>Category</th>\r\n                        <th>Correct</th>\r\n                        <th>Incorrect</th>\r\n                    </tr>\r\n                    {tableBody}\r\n                </table>\r\n            ): <h1>U have no statistics yet</h1>}\r\n\r\n            <button className='' onClick={() => props.setStatistic(!props.statistic)}>\r\n                To Main Menu\r\n            </button>\r\n            <button className='' onClick={() => localStorage.clear()}>\r\n                Clear all Statistics\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Statisctics\r\n","export default __webpack_public_path__ + \"static/media/bcg.3a31cf94.mp3\";","import {useState} from \"react\";\r\nimport useSound from \"use-sound\";\r\nimport bcgSound from \"../../music/bcg.mp3\";\r\n\r\nconst SoundSettings = (props) => {\r\n\r\n    const [volume, setVolume] = useState(0.75);\r\n\r\n    const [play, {stop}] = useSound(\r\n        bcgSound,\r\n        {\r\n            volume,\r\n            interrupt: true\r\n        },\r\n    )\r\n\r\n    function changeVolume(e) {\r\n        setVolume(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div> Sound Settings</div>\r\n            <div>\r\n                <span>Sound Volume</span>\r\n                <div className=\"button-wrapper\">\r\n                    <button onClick={() => props.stop(0)}>OFF</button>\r\n                    <button onClick={() => props.stop(1)}>ON</button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <span>Music Volume</span>\r\n                <input type=\"range\" min=\"0\" max=\"1\" step=\"0.001\" onClick={e => changeVolume(e)}/>\r\n                <div className=\"button-wrapper\">\r\n                    <button onClick={() => stop()}>OFF</button>\r\n                    <button onClick={play}>ON</button>\r\n                </div>\r\n            </div>\r\n            <button className='' onClick={() => props.setSoundSettings(!props.soundSettings)}>\r\n                To Main Menu\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SoundSettings\r\n","import React from 'react'\r\n\r\n\r\nexport class DifficultySet extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: this.props.difficulty};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n\r\n    async handleChange(event) {\r\n        await this.setState({value: event.target.value});\r\n        await this.props.setdif(this.state.value)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <label className=\"box\">\r\n                    Difficulty:\r\n                    <select value={this.state.value} onChange={this.handleChange}>\r\n                        <option value=\"easy\">izi</option>\r\n                        <option value=\"medium\">middle</option>\r\n                        <option value=\"hard\">hard</option>\r\n                    </select>\r\n                </label>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport class TopicSet extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: this.props.topic};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    async handleChange(event) {\r\n        await this.setState({value: event.target.value});\r\n        this.props.setTpc(this.state.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <label className=\"box\">\r\n                    Category\r\n                    <select value={this.state.value} onChange={this.handleChange}>\r\n                        <option value=\"9\">General</option>\r\n                        <option value=\"10\">Books</option>\r\n                        <option value=\"11\">Films</option>\r\n                        <option value=\"12\">Music</option>\r\n                        <option value=\"15\">Video Games</option>\r\n                        <option value=\"21\">Sports</option>\r\n                        <option value=\"27\">Animals</option>\r\n                    </select>\r\n                </label>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport class NumberOfQuestions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: this.props.amount};\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    async handleChange(event) {\r\n        await this.setState({value: Number(event.target.value)});\r\n        this.props.setAmount(this.state.value)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <label className=\"box\">\r\n                    Questions number:\r\n                    <select value={this.state.value} onChange={this.handleChange}>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"15\">15</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"25\">25</option>\r\n                        <option value=\"50\">50</option>\r\n\r\n                    </select>\r\n                </label>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import {menu} from \"../../styles\";\r\nimport {DifficultySet} from \"./DifficultySet\";\r\nimport {TopicSet} from \"./TopicSet\";\r\nimport {NumberOfQuestions} from \"./NumberOfQuestions\";\r\n\r\nconst GameSettings = (props) => {\r\n    return(\r\n        <div style={menu}>\r\n            <DifficultySet difficulty={props.difficulty} setdif={props.setDifficulty} classname=\"difficulty\"/>\r\n            <TopicSet setTpc={props.setCategory} topic={props.category}/>\r\n            <NumberOfQuestions amount={props.amount} setAmount={props.setAmount}/>\r\n            <button className='' onClick={() => props.setSettings(!props.settings)}>\r\n                To Main Menu\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameSettings\r\n","import React, {useState, useEffect} from 'react';\nimport QuestionCard from '../src/Components/QuestionCard'\nimport {fetchQuizQuestions} from \"./API\";\nimport './App.css'\nimport useSound from 'use-sound';\nimport btnSound from './music/btn.mp3'\nimport {menu} from \"./styles\";\nimport Statistics from \"./Components/Statistics/Statistics\";\nimport SoundSettings from \"./Components/SoundSettings/SoundSettings\";\nimport GameSettings from \"./Components/GameSettings/GameSettings\";\n\n\n\nconst App = () => {\n    const [loading, setLoading] = useState(false);\n    const [questions, setQuestions] = useState([]);\n    const [number, setNumber] = useState(0);\n    const [userAnswers, setUserAnswers] = useState([]);\n    const [score, setScore] = useState(0);\n    const [gameOver, setGameOver] = useState(true);\n    const [difficulty, setDifficulty] = useState('easy');\n    const [category, setCategory] = useState('9');\n    const [settings, setSettings] = useState(false);\n    const [amount, setAmount] = useState(10);\n    const [statistic, setStatistic] = useState(false);\n    const [soundSettings, setSoundSettings] = useState(false);\n\n    const [volume, setVolume] = useState(0.75);\n\n    const [play, {stop}] = useSound(\n        btnSound,\n        {\n            volume,\n            interrupt: true\n        },\n    )\n\n    const startTrivia = async () => {\n        setLoading(true)\n        setGameOver(false)\n\n        const newQuestions = await fetchQuizQuestions(\n            amount,\n            difficulty,\n            category,\n            amount\n        );\n        setQuestions(newQuestions)\n        setScore(0)\n        setUserAnswers([])\n        setNumber(0)\n        setLoading(false)\n\n    }\n\n\n    const checkAnswer = (e) => {\n        play()\n        if (!gameOver) {\n            const answer = e.currentTarget.value\n\n            const correct = questions[number].correct_answer === answer\n\n            const item = JSON.parse(localStorage.getItem(category))\n\n            if (correct) {\n                setScore(prev => prev + 1)\n\n                {item ?\n                    localStorage.setItem(category, JSON.stringify({...item, correct: item.correct + 1}))\n                    : localStorage.setItem(category, JSON.stringify({incorrect: 0, correct: 1}))\n\n                }\n            } else {\n                let item = JSON.parse(localStorage.getItem(category))\n                {item ?\n                    localStorage.setItem(category, JSON.stringify({...item, incorrect: item.incorrect + 1}))\n                    : localStorage.setItem(category, JSON.stringify({incorrect: 0, correct: 1}))\n\n                }\n            }\n\n            const answerObject = {\n                question: questions[number].question,\n                answer,\n                correct,\n                correctAnswer: questions[number].correct_answer,\n            }\n\n            setUserAnswers(prev => [...prev, answerObject])\n        }\n    }\n\n    const nextQuestion = () => {\n        const nextQuestion = number + 1;\n\n        if (nextQuestion === amount) {\n            setGameOver(true)\n        } else {\n            setNumber(nextQuestion)\n        }\n    }\n\n\n    return (\n        <>\n            <h1>REACT QUIZ</h1>\n            {(!settings  && !statistic && !soundSettings) ?\n                <>\n                    {gameOver || userAnswers.length === amount ? (\n                        <div style={menu} className=\"menu\">\n                            <button className='start' onClick={startTrivia}>\n                                Start\n                            </button>\n                            <button className='' onClick={() => setSettings(!settings)}>\n                                Game Settings\n                            </button>\n                            <button className='' onClick={() => setSoundSettings(!soundSettings)}>\n                                Sound Settings\n                            </button>\n                            <button className='' onClick={() => setStatistic(!statistic)}>\n                                Statistics\n                            </button>\n                        </div>\n\n                    ) : null}\n                    <div className=\"gameTable\">\n                        {!gameOver ? <p className='score'>Score: {score}</p> : null}\n                        {loading ? <p>Loading Questions...</p> : null}\n                        {!loading && !gameOver && (\n                            <QuestionCard\n                                questionNr={number + 1}\n                                totalQuestions={amount}\n                                question={questions[number].question}\n                                answers={questions[number].answers}\n                                userAnswer={userAnswers ? userAnswers[number] : undefined}\n                                callback={checkAnswer}\n                            />\n                        )}\n                    </div>\n                    {!gameOver && !loading && userAnswers.length === number + 1 && number !== amount - 1 ? (\n                        <button className='next' onClick={nextQuestion}>\n                            Next Question\n                        </button>\n                    ) : null}\n                </>\n                : statistic ?\n                    <Statistics setStatistic={setStatistic} statistic={statistic}/>\n                : soundSettings ?\n                  <SoundSettings setSoundSettings={setSoundSettings} soundSettings={soundSettings} stop={setVolume}/>\n                :\n                  <GameSettings difficulty={difficulty} setDifficulty={setDifficulty}\n                                setCategory={setCategory} category={category}\n                                amount={amount} setAmount={setAmount}\n                                setSettings={setSettings} settings={settings}/>\n              }\n        </>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}