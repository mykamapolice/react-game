{"version":3,"sources":["Components/Answers/Answer.jsx","Components/QuestionCard.jsx","API.js","music/btn.mp3","styles.js","Components/Statistics/StatisticsItem.jsx","Components/Statistics/Statistics.jsx","music/bcg.mp3","Components/SoundSettings/SoundSettings.jsx","Components/GameSettings/DifficultySet.jsx","Components/GameSettings/TopicSet.jsx","Components/GameSettings/NumberOfQuestions.jsx","Components/GameSettings/GameSettings.jsx","App.js","reportWebVitals.js","index.js"],"names":["Answer","props","useEffect","document","addEventListener","event","key","console","log","btn","querySelector","click","type","id","answer","hotkey","className","disabled","userAnswer","value","question","onClick","callback","onKeyPress","dangerouslySetInnerHTML","__html","QuestionCard","answers","questionNr","totalQuestions","ans","map","hotkeys","fetchQuizQuestions","amount","difficulty","category","a","endpoint","fetch","json","data","results","incorrect_answers","correct_answer","arr","i","push","menu","display","flexDirection","StatisticItem","name","correct","incorrect","Statisctics","React","useState","updateState","categories","9","10","11","12","15","21","27","tableBody","Object","keys","localStorage","abc","JSON","parse","getItem","categoryName","toString","el","length","setStatistic","statistic","clear","SoundSettings","volume","setVolume","useSound","bcgSound","interrupt","play","stop","min","max","step","e","target","changeVolume","setSoundSettings","soundSettings","DifficultySet","state","handleChange","bind","this","setState","setdif","onChange","Component","TopicSet","topic","setTpc","NumberOfQuestions","Number","setAmount","GameSettings","style","setDifficulty","classname","setCategory","setSettings","settings","App","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","btnSound","startTrivia","newQuestions","Statistics","undefined","currentTarget","item","prev","setItem","stringify","answerObject","correctAnswer","nextQuestion","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.96ec6d8b.chunk.js","sourcesContent":["import React, {useEffect, ReactElement} from 'react';\r\n\r\nfunction Answer(props) {\r\n\r\n    useEffect(() => {\r\n        const setKey = (event) => {\r\n            if (event.key === ' ') {\r\n                console.log('space')\r\n            } else {\r\n                const btn = document.querySelector(`#${event.key}`)\r\n                if(btn !== null) {\r\n                    btn.click()\r\n                }\r\n            }\r\n        }\r\n        document.addEventListener('keydown', setKey);\r\n    }, []);\r\n\r\n    return (\r\n        <div key={props.answer.question}>\r\n            <button type=\"submit\" id={props.answer.hotkey} className={\"card\"} disabled={props.userAnswer ? true : false}\r\n                    value={props.answer.question} onClick={props.callback} onKeyPress={props.callback}>\r\n                <span dangerouslySetInnerHTML={{__html: `${props.answer.hotkey} ${props.answer.question}`}}/>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Answer\r\n","import React from 'react'\r\nimport './questionCard.css'\r\nimport Answer from \"./Answers/Answer\";\r\n\r\nconst QuestionCard = ({\r\n                                           question,\r\n                                           answers,\r\n                                           callback,\r\n                                           userAnswer,\r\n                                           questionNr,\r\n                                           totalQuestions,\r\n                                       }) =>  {\r\n\r\n    const ans = answers.map( answer => {\r\n        return <Answer answer = {answer} callback={callback} userAnswer={userAnswer} />\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <p className=\"number\">\r\n                Question: {questionNr} / {totalQuestions}\r\n                <p>hotkeys - ( a b c d space ) ENGLISH LAYOUT!!!</p>\r\n            </p>\r\n            <p dangerouslySetInnerHTML={{__html: question}}/>\r\n            <div>\r\n                {ans}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionCard\r\n","import {shuffleArray} from \"./utils\";\r\nconst hotkeys = ['a', 'b', 'c', 'd']\r\n\r\n\r\nexport const fetchQuizQuestions = async (amount, difficulty, category) => {\r\n    const endpoint = `https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficulty}&type=multiple`\r\n    const data = await (await fetch((endpoint))).json();\r\n    return data.results.map((question) => {\r\n        const a = [...question.incorrect_answers, question.correct_answer]\r\n        const arr = []\r\n        for(let i=0; i<4; i++) {\r\n            arr.push({question: a[i], hotkey: hotkeys[i]})\r\n        }\r\n        return {\r\n            ...question,\r\n            answers: arr\r\n        }\r\n    })\r\n};\r\n","export default __webpack_public_path__ + \"static/media/btn.23620f2c.mp3\";","export const menu = {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n}\r\n\r\nexport const difficulty = {\r\n    display: \"none\"\r\n}\r\n","const StatisticItem = (props) => {\r\n    return (\r\n        <tr>\r\n        <td>{props.name}</td>\r\n        <td>{props.correct}</td>\r\n        <td>{props.incorrect}</td>\r\n    </tr>\r\n    )\r\n}\r\n\r\nexport default StatisticItem\r\n","import StatisticItem from \"./StatisticsItem\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst Statisctics = (props) => {\r\n\r\n    const [, updateState] = React.useState();\r\n\r\n    const useForceUpdate = () => {\r\n        localStorage.clear()\r\n        updateState(' ')\r\n    }\r\n\r\n    const categories = {\r\n        9: 'General',\r\n        10: 'Books',\r\n        11: 'Films',\r\n        12: 'Music',\r\n        15: 'Games',\r\n        21: 'Sports',\r\n        27: 'Animals'\r\n    }\r\n\r\n    const keys = Object.keys(localStorage)\r\n\r\n    const allStatistics = keys.map(key => {\r\n        const abc = JSON.parse(localStorage.getItem(key))\r\n        const categoryName = categories[key.toString()]\r\n        const item = {\r\n            ...abc, categoryName\r\n        }\r\n        return item\r\n    })\r\n\r\n    const tableBody = allStatistics.map(el => {\r\n        return <StatisticItem name={el.categoryName} incorrect={el.incorrect} correct={el.correct} key={el.categoryName}/>\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div> Statistics </div>\r\n            {tableBody.length ? (\r\n                <table>\r\n                    <tr>\r\n                        <th>Category</th>\r\n                        <th>Correct</th>\r\n                        <th>Incorrect</th>\r\n                    </tr>\r\n                    {tableBody}\r\n                </table>\r\n            ): <h1>U have no statistics yet</h1>}\r\n\r\n            <button className='' onClick={() => props.setStatistic(!props.statistic)}>\r\n                To Main Menu\r\n            </button>\r\n            <button className='' onClick={useForceUpdate}>\r\n                Clear all Statistics\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Statisctics\r\n","export default __webpack_public_path__ + \"static/media/bcg.3a31cf94.mp3\";","import {useState} from \"react\";\r\nimport useSound from \"use-sound\";\r\nimport bcgSound from \"../../music/bcg.mp3\";\r\n\r\nconst SoundSettings = (props) => {\r\n\r\n    const [volume, setVolume] = useState(0.75);\r\n\r\n    const [play, {stop}] = useSound(\r\n        bcgSound,\r\n        {\r\n            volume,\r\n            interrupt: true\r\n        },\r\n    )\r\n\r\n    function changeVolume(e) {\r\n        setVolume(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div> Sound Settings</div>\r\n            <div>\r\n                <span>Sound Volume</span>\r\n                <div className=\"button-wrapper\">\r\n                    <button onClick={() => props.stop(0)}>OFF</button>\r\n                    <button onClick={() => props.stop(1)}>ON</button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <span>Music Volume</span>\r\n                <input type=\"range\" min=\"0\" max=\"1\" step=\"0.001\" onClick={e => changeVolume(e)}/>\r\n                <div className=\"button-wrapper\">\r\n                    <button onClick={() => stop()}>OFF</button>\r\n                    <button onClick={play}>ON</button>\r\n                </div>\r\n            </div>\r\n            <button className='' onClick={() => props.setSoundSettings(!props.soundSettings)}>\r\n                To Main Menu\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SoundSettings\r\n","import React from 'react'\r\n\r\n\r\nexport class DifficultySet extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: this.props.difficulty};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n\r\n    async handleChange(event) {\r\n        await this.setState({value: event.target.value});\r\n        await this.props.setdif(this.state.value)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <label className=\"select\">\r\n                    Difficulty:\r\n                    <select value={this.state.value} onChange={this.handleChange}>\r\n                        <option value=\"easy\">izi</option>\r\n                        <option value=\"medium\">middle</option>\r\n                        <option value=\"hard\">hard</option>\r\n                    </select>\r\n                </label>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport class TopicSet extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: this.props.topic};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    async handleChange(event) {\r\n        await this.setState({value: event.target.value});\r\n        this.props.setTpc(this.state.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <label className=\"select\">\r\n                    Category\r\n                    <select value={this.state.value} onChange={this.handleChange}>\r\n                        <option value=\"9\">General</option>\r\n                        <option value=\"10\">Books</option>\r\n                        <option value=\"11\">Films</option>\r\n                        <option value=\"12\">Music</option>\r\n                        <option value=\"15\">Video Games</option>\r\n                        <option value=\"21\">Sports</option>\r\n                        <option value=\"27\">Animals</option>\r\n                    </select>\r\n                </label>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport class NumberOfQuestions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: this.props.amount};\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    async handleChange(event) {\r\n        await this.setState({value: Number(event.target.value)});\r\n        this.props.setAmount(this.state.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <label className=\"select\">\r\n                    Questions number:\r\n                    <select value={this.state.value} onChange={this.handleChange}>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"15\">15</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"25\">25</option>\r\n                        <option value=\"50\">50</option>\r\n\r\n                    </select>\r\n                </label>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import {menu} from \"../../styles\";\r\nimport {DifficultySet} from \"./DifficultySet\";\r\nimport {TopicSet} from \"./TopicSet\";\r\nimport {NumberOfQuestions} from \"./NumberOfQuestions\";\r\n\r\nconst GameSettings = (props) => {\r\n    return(\r\n        <div style={menu}>\r\n            <DifficultySet difficulty={props.difficulty} setdif={props.setDifficulty} classname=\"difficulty\"/>\r\n            <TopicSet setTpc={props.setCategory} topic={props.category}/>\r\n            <NumberOfQuestions amount={props.amount} setAmount={props.setAmount}/>\r\n            <button className='' onClick={() => props.setSettings(!props.settings)}>\r\n                To Main Menu\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameSettings\r\n","import React, {useState, useEffect} from 'react';\nimport QuestionCard from '../src/Components/QuestionCard'\nimport {fetchQuizQuestions} from \"./API\";\nimport './App.css'\nimport useSound from 'use-sound';\nimport btnSound from './music/btn.mp3'\nimport {menu} from \"./styles\";\nimport Statistics from \"./Components/Statistics/Statistics\";\nimport SoundSettings from \"./Components/SoundSettings/SoundSettings\";\nimport GameSettings from \"./Components/GameSettings/GameSettings\";\n\n\n\nconst App = () => {\n    const [loading, setLoading] = useState(false);\n    const [questions, setQuestions] = useState([]);\n    const [number, setNumber] = useState(0);\n    const [userAnswers, setUserAnswers] = useState([]);\n    const [score, setScore] = useState(0);\n    const [gameOver, setGameOver] = useState(true);\n    const [difficulty, setDifficulty] = useState('easy');\n    const [category, setCategory] = useState('9');\n    const [settings, setSettings] = useState(false);\n    const [amount, setAmount] = useState(10);\n    const [statistic, setStatistic] = useState(false);\n    const [soundSettings, setSoundSettings] = useState(false);\n\n    const [volume, setVolume] = useState(0.75)\n\n    useEffect(() => {\n        const setKey = (event) => {\n            if(event.key === ' ') {\n                const btn = document.querySelector(`#next`)\n                if (btn !== null) {\n                    btn.click()\n                }\n            }\n        }\n        document.addEventListener('keydown', setKey);\n    }, []);\n\n    const [play, {stop}] = useSound(\n        btnSound,\n        {\n            volume,\n            interrupt: true\n        },\n    )\n\n    const startTrivia = async () => {\n        setLoading(true)\n        setGameOver(false)\n\n        const newQuestions = await fetchQuizQuestions(\n            amount,\n            difficulty,\n            category,\n            amount\n        );\n        setQuestions(newQuestions)\n        setScore(0)\n        setUserAnswers([])\n        setNumber(0)\n        setLoading(false)\n\n    }\n\n\n    const checkAnswer = (e) => {\n        play()\n        if (!gameOver) {\n            const answer = e.currentTarget.value\n\n            const correct = questions[number].correct_answer === answer\n\n            const item = JSON.parse(localStorage.getItem(category))\n\n            if (correct) {\n                setScore(prev => prev + 1)\n\n                {item ?\n                    localStorage.setItem(category, JSON.stringify({...item, correct: item.correct + 1}))\n                    : localStorage.setItem(category, JSON.stringify({incorrect: 0, correct: 1}))\n\n                }\n            } else {\n                let item = JSON.parse(localStorage.getItem(category))\n                {item ?\n                    localStorage.setItem(category, JSON.stringify({...item, incorrect: item.incorrect + 1}))\n                    : localStorage.setItem(category, JSON.stringify({incorrect: 0, correct: 1}))\n\n                }\n            }\n\n            const answerObject = {\n                question: questions[number].question,\n                answer,\n                correct,\n                correctAnswer: questions[number].correct_answer,\n            }\n\n            setUserAnswers(prev => [...prev, answerObject])\n        }\n    }\n\n    const nextQuestion = () => {\n        const nextQuestion = number + 1;\n\n        if (nextQuestion === amount) {\n            setGameOver(true)\n        } else {\n            setNumber(nextQuestion)\n        }\n    }\n\n\n    return (\n        <>\n            <h1>REACT QUIZ</h1>\n            {(!settings  && !statistic && !soundSettings) ?\n                <>\n                    {gameOver || userAnswers.length === amount ? (\n                        <div style={menu} className=\"menu\">\n                            <button className='start' onClick={startTrivia}>\n                                Start\n                            </button>\n                            <button className='' onClick={() => setSettings(!settings)}>\n                                Game Settings\n                            </button>\n                            <button className='' onClick={() => setSoundSettings(!soundSettings)}>\n                                Sound Settings\n                            </button>\n                            <button className='' onClick={() => setStatistic(!statistic)}>\n                                Statistics\n                            </button>\n                        </div>\n\n                    ) : null}\n                    <div className=\"gameTable\">\n                        {!gameOver ? <p className='score'>Score: {score}</p> : null}\n                        {loading ? <p>Loading Questions...</p> : null}\n                        {!loading && !gameOver && (\n                            <QuestionCard\n                                questionNr={number + 1}\n                                totalQuestions={amount}\n                                question={questions[number].question}\n                                answers={questions[number].answers}\n                                userAnswer={userAnswers ? userAnswers[number] : undefined}\n                                callback={checkAnswer}\n                            />\n                        )}\n                    </div>\n                    {!gameOver && !loading && userAnswers.length === number + 1 && number !== amount - 1 ? (\n                        <button id='next' onClick={nextQuestion}>\n                            Next Question ( space )\n                        </button>\n                    ) : null}\n                </>\n                : statistic ?\n                    <Statistics setStatistic={setStatistic} statistic={statistic}/>\n                : soundSettings ?\n                  <SoundSettings setSoundSettings={setSoundSettings} soundSettings={soundSettings} stop={setVolume}/>\n                :\n                  <GameSettings difficulty={difficulty} setDifficulty={setDifficulty}\n                                setCategory={setCategory} category={category}\n                                amount={amount} setAmount={setAmount}\n                                setSettings={setSettings} settings={settings}/>\n              }\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}